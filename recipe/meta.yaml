{% set version = "0.16.0" %}
{% set filename = "apache-arrow-" + version + ".tar.gz" %}
{% set checksum = "261992de4029a1593195ff4000501503bd403146471b3168bd2cc414ad0fb7f5" %}
{% set number = "3" %}
{% set cuda_enabled = cuda_compiler_version is not undefined and cuda_compiler_version != "None" %}
{% set build_ext = "cuda" if cuda_enabled else "cpu" %}

package:
  name: pyarrow
  version: {{ version }}

source:
  fn: {{ filename }}
  url: https://dist.apache.org/repos/dist/release/arrow/arrow-{{ version }}/{{ filename }}
  sha256: {{ checksum }}

build:
  number: {{ number }}
  string: "py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ number }}_{{ build_ext }}"
  skip: true  # [cuda_compiler_version not in (undefined, "None", "9.2")]
  track_features:
    {{ "- arrow-cuda" if cuda_enabled else "" }}

requirements:
  build:
    - cmake
    - ninja
    - make  # [unix]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    # pyarrow does not require nvcc but it needs to link against libraries in arrow-cpp=*=*cuda
    - {{ compiler("cuda") }}  # [cuda_compiler_version not in (undefined, "None")]
  host:
    # directly pin boost-cpp as we also seem to directly include boost symbols
    # in the Python modules.
    - arrow-cpp ={{ version }}=*{{ build_ext }}
    - boost-cpp
    - cython
    - numpy 1.16.*
    - python
    - setuptools
    - setuptools_scm
  run:
    - {{ pin_compatible('numpy', lower_bound='1.16') }}
    - boost-cpp
    - arrow-cpp ={{ version }}=*{{ build_ext }}
    - glog
    - pandas
    # empty parquet-cpp metapackage, force old versions to be uninstalled
    - parquet-cpp 1.5.1.*
    - python
    - snappy
  run_constrained:
    - arrow-cpp-proc * {{ build_ext }}
    - cudatoolkit >=9.2  # [cuda_compiler_version not in (undefined, "None")]

test:
  imports:
    - pyarrow
    - pyarrow.dataset
    - pyarrow.flight
    - pyarrow.gandiva  # [not (aarch64 or ppc64le)]
    - pyarrow.orc      # [unix]
    - pyarrow.parquet
    - pyarrow.plasma   # [unix]
    - pyarrow.fs
    - pyarrow._s3fs
    - pyarrow._hdfs
    # We can only test importing cuda package but cannot run when a
    # CUDA device is not available, for instance, when building from CI.
    - pyarrow.cuda     # [cuda_compiler_version not in (undefined, "None")]

about:
  home: http://github.com/apache/arrow
  license: Apache-2.0
  license_file: LICENSE.txt
  summary: 'Python libraries for Apache Arrow'

extra:
  recipe-maintainers:
    - wesm
    - xhochy
    - jreback
    - cpcloud
    - pcmoritz
    - robertnishihara
    - siddharthteotia
    - kou
    - kszucs
    - pitrou
    - pearu
